工作区-add-暂存区-commit-本地仓库-push-远程仓库-clone-本地仓库2-checkout-工作区
 
空格：下一页。b：上一页。q：退出
(HEAD)指向的版本就是当前版本
remote远程服务器端
origin起点开端。就是指向某一个远程repository的指针
服务器master控制主人。指向服务器某个branch的指针
本地master就是指向刚刚从remote server传到本地的副本branch。
branch分支。
detached分离。

进入想要创建工作目录的路径，创建一个目录做为本地版本仓库。
	mkdir repositoryname

通过git init命令进行初始化git仓库，把目录变成Git可以管理的仓库。
	git init

设置签名：用户名，email地址。用于区分开发人员的作用
	项目级别（仓库级别）-仅在当前本地库范围内有效(cat .git/config)
		git config user.name liuyang
		git config user.email xxx@163.com
	系统用户级别-登录当前操作系统的用户范围(cat ~/.gitconfig)
		git config --global user.name "your name"
		git config --global user.email "xxx@example.com"

添加文件到Git仓库，分两：
	将工作区的文件添加到暂存区。
	git add <file>，注意，可反复多次使用，添加多个文件；
	git add --all  
	将暂存区的文件提交到本地库。
	git commit -m <message>，完成。
	
丢弃工作区的修改
	git reset HEAD <file>可以把暂存区的修改撤销掉（unstage），重新放回工作区
	git checkout -- file

从版本库中删除该文件
	git rm <file> 删除本地库文件（移到缓存区）。
	git commit -m <message> 提交。确认删除本地库文件
	找回文件通过回退历史记录。

辅助查看命令：
	git status：命令可以让我们时刻掌握仓库当前的状态
	git reflog：查看命令历史，以便确定要回到未来的哪个版本。HEAD@{移动到该版本所需步数}
	git log [--[pretty=]noe line]：可以查看提交历史，以便确定要回退到哪个版本。
	git diff:工作区文件与缓存区文件进行比较(所有文件)。
	git diff HEAD [文件名]：工作区文件与本库里该文件最新版本比较。
	git diff [本地库历史版本][文件名]：工作区文件与本地库历史版本比较。

版本前进后退：HEAD指向的版本就是当前版本
	指定到任意某个版本。可后退可前进
		$ git reset --hard commit_id 
	后退n个版本。只能后退。
		$ git reset --hard HEAD~n
	HEAD^，一个^表示后退一个版本，n个^表示后退n个版本。只能后退
		$ git reset --hard HEAD^ 
		
--hard、--mixed、--soft对比
	--hard： 移动本地库HEAD指针。重置缓存区。重置工作区。
	--mixed：移动本地库HEAD指针。重置缓存区。
	--soft:  移动本地库HEAD指针。

Git分支
	git branch -v：查看分支
	git branch hot_fix：创建一个叫hot_fix的分支
	git checkout master：切换到master分支。


	init 初始化后产生master分支(主干)
	o---o---o-----------o-------o--o---o(master)
		├ o-hot_fix 热修复bug-o-┘  │    (branch)
		├ o-feature_manager-----o--┤    (branch)
		└ o-feature_driver------o--┘    (branch)
		

添加远程github库
	$ git remote add origin https://github.com/18266643599/repository.git
	$ git push -u origin master

克隆到本地：配置公钥
	cd ~/.ssh
	ssh-keygen -t rsa -C "18266643599@163.com"  三次回车
	ssh -v git@github.com
	ssh-agent -s
	ssh-add ~/.ssh/id_rsa
将id_rsa.pub将里面的内容复制 到 github账号-settings-SSH and GPG keys-new SSH key，title任意
验证：ssh -T git@github.com

使用原生git协议克隆速度最快
	$ git clone git@github.com:18266643599/repository.git   

	git push 命令，实际上是把当前分支master推送到远程github
	git push origin master推送最新修改

主分支，即master分支。HEAD指向的就是当前分支

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>






















